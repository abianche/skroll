name: CI
permissions:
  contents: read

on:
  pull_request:
  push:
    branches: [main]

jobs:
  backend:
    name: Backend (w/story-core)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust (stable) with components
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Cache cargo registry + build
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: rust-${{ runner.os }} # stable key across jobs

      - name: cargo fmt --all -- --check
        run: cargo fmt --all -- --check

      - name: cargo clippy (story-core)
        run: cargo clippy -p story-core -- -D warnings

      - name: cargo test (story-core)
        run: cargo test -p story-core --all-features

      - name: cargo doc (story-core)
        run: RUSTDOCFLAGS="-D warnings" cargo doc -p story-core --no-deps

  frontend:
    name: Frontend
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
          run_install: true

      - name: Verify versions
        run: |
          node -v
          pnpm -v

      - name: Build
        run: pnpm build

      - name: Lint
        run: pnpm lint

      - name: Format check
        run: pnpm format:check
